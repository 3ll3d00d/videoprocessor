Next (0.3.2)
- Most throws now lead to error popup
- Using VP design icon
- keyboard shortcut added for renderer reset (r)
- Renderer can now be selected by command line option /renderer, example: /renderer "DirectShow - Video Renderer"
- Command line options /renderer [name] and /fullscreen together now immediately leads to fullscreen again (fire-and-forget)
- Extended the DirectShow start-stop options to include non-stop and smart selection options

0.3.1
- Default frame timing changed to clock+theo as multiple users reported blips in clock-clock

0.3.0: Clocks and any DirectShow renderer
- Always uses the best clock available (=card hardware clock)
- HDR info is now in CIE image
- Added final handler for throws which pops up a messagebox upon thrown exceptions, this allows the user to understand what's going on in many situations
- Removed all mutexes (outside of directshow), it now runs lock-free with a few atomics to ensure correctness
- Version number visible in window title
- Mouse not visible anymore in video render window, both windowed and full-screen
- Pressing return closed the window, now takes context dependant action with a default of restarting the renderer
- Our queue dropped frame counter (excluding renderer-dropped frames)
- Missing frame counter (never delivered by capture but found by timestamp-gap analysis)
- Process priority is now set to high on start
- User selectable frame-interval determination modes, clock-clock, clock-theo, theo and none
- Renderer reset button, which stops, clears the queue and starts playback again
- AVX required (requires < 10-year old CPU)
- Disable screen saver/power save when running
- VideoProcessor is now DirectShow renderer independent, you can use any installed DirectShow renderer.
- Optional auto-tune params based on renderer queue and exit latency.
- FIX: Deadlock situation with blackmagic callbacks
- FIX: frame timestamps now correct
- FIX: Correct process name in task list

0.2.0
- SSE2 build config, not using AVX anymore until needed
- Integrated ffmpeg
- Losslessly convert RGB formats which most renderers cannot handle natively, right now supports r210 and r12b; both are used by PS4Pro

0.1.1
- Figured out why my keyboard commands were not working, some renderers have anti-debugging protection which triggers when running inside
  of MSVC debugger. That also disables the keyboard shortcuts. They just worked. Cleaned up the code to remove the needless paths.
- Now has the /fullscreen command line option which can be given. As soon as the program detects a renderable input it'll change to
  fullscreen mode
- Enable/disable buttons based on presence of renderer
- If the renderer fails to start ensure no more fullscreen and give user a retry button
- Fix: Error upon switching capture card input which remembers old state
- Fix: GUI elements & state related to capture device were uninitialized at start and not cleared when restarting capture

0.1.0
- Full screen now works and remains full even when modeswitching.
  Will full-screen to current monitor.
  Toggle with alt-enter, exit with escape.

0.0.4
- Overridable DirectShow inputs to renderer

0.0.3
- If the renderer throws this is now shown in the GUI and properly handled.
- You can actually get out of full-screen with alt-f4

0.0.2
- Fix for SDR handling which would stop the renderer
- In renderer stops with a failure it will now be restarted by either pressing the restart button or when a new mode comes along

0.0.1
- First release, very very alpha, will blow up, probably eats your homework - be warned!
- Known issue: can't return from full screen mode
- Known issue: Only supports BlackMagic cards and only support v210 input
