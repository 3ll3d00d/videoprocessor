Roadmap
=======

0.4.0: Upscaling, added MPCVR renderer, HDR controls
- Be able to override all HDR data
- Correct AR ratio for renderers
- OnPaint pipe through to renderers
- HDR support for MPCVR?
- Put preferrered renderers on top of list
- Timing clock as command line argument (value and auto)
- Check all round()'s to see if they're really needed and we can't just floor it
- GRB make no sense for display
- Fullscreen button is now checkbox, test and validate expected performance (also from commandline setting)
- Remove text from CIE1931 diagram
- Clean up TODO
- Color latency output

1.0.0: Out of beta
- No changes expected, re-release of 0.4.0 code

1.1.0: Constant time delay
- Determine baseline latency with external meter
- Build aimed-for delay to ensure external lip-sync is spot on
- Write guide on how to DIY this

1.2.0: Zoom
- Cropping-zoom in y and x dimensions
- Auto shifting (hwf)

1.3.0: MPV renderer
- Integrate MPV renderer
- Renderer options as own dialogs


Stuff & ideas to do for later:
- Support for audio
- /fullscreen immediately to fullscreen and show logo + some short status update
- CaptureInput as a first-class citizen rather than a POD (rename to capture device input?)
- Toggelable HDCP on video output through the win32 Output Protection Manager
  (This will lead to problems with NVIDIA GRID as it's not allowed to capture)
- Only force settings if none are present (LLDV case mcpherv). Looked at this and it seems little useful without further scripting
  or the ability to store config. Both are not yet on the radar.
- Use NVIDIA GRID to get the rendered frame and get the egress timestamp it so that we can build a feedback system going.
  This actually seems possible to get us timestamps of point of frame-render. If the egress delay from there is reasonably
  constant we can probably get a near constant-time renderer going.
- Build a git version to version.rc generator and use that to set VS_VERSION_INFO version etc
- Make group names clickable and open help page
- Add menu bar with help link
- Support for interlaced modes (don't have hardware which does this)
- If the blackmagic capture thread throws that's never shown a new one is spun up silently, try-catch external calls, make errors visible
- If the CAM thread throws that's never shown, make errors visible
- Replace GDI drawing with MFC
- Make a CIE1931 diagram with the pixels painted into it once a sec or so to see if the video actually getting near it's stated performance
- Add support for interlaced formats (cannot test)
